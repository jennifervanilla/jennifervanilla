(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _videos = require('./videos');

var _videos2 = _interopRequireDefault(_videos);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var theme = document.querySelector('.theme');
var title = document.getElementById('jv-title');
var arrow1 = document.querySelector('.icon-arrow');
var arrow2 = document.querySelector('.icon-arrow--down');
var arrowsUp = document.querySelector('.up-arrow');
console.log('arrowsUp: ', arrowsUp);
var verticalNav = document.querySelector('.js-vertical-nav');
var random = document.getElementById('random');
var clock = document.getElementById('clock');
var mobileClock = document.getElementById('clock--mobile');
var mobileArrow = document.getElementById('arrow--mobile');
var lab = document.getElementById('lab');

var arrow1Rotate = false;
var arrow2Rotate = false;
var randomOpen = false;
var mainOpen = false;
var randomShowing = false;
var idx = void 0;
var prevItem = void 0;
var prevView = void 0;

var makeNavListeners = function makeNavListeners() {
	var items = Array.from(document.querySelector('.js-vertical-nav').querySelectorAll('.nav-link'));

	items.forEach(function (li) {

		var id = li.id || null;
		li.addEventListener('click', function () {
			if (!mainOpen) mainOpen = true;
			randomOpen = false;
			if (li !== document.getElementById('jv-lab')) lab.src = lab.src;
			li.classList.add('nav-link--active');
			if (prevItem && prevItem !== li) prevItem.classList.remove('nav-link--active');
			prevItem = li;

			if (!randomOpen) {
				random.classList.remove('view-option--show');
				random.firstElementChild.src = "";
			}

			var view = document.getElementById('a-' + id);
			view.classList.add('view-option--show');
			if (prevView && prevView === random) random.classList.remove('view-option--show');
			if (prevView && prevView !== view) prevView.classList.remove('view-option--show');
			prevView = view;
		});
	});
};

var makeArrowListeners = function makeArrowListeners() {
	arrow1.addEventListener('click', function (event) {
		var action = !arrow1Rotate ? 'add' : 'remove';
		var horizontalNav = document.querySelector('.js-horizontal-nav');
		event.target.classList[action]('icon-arrow--rotate');
		horizontalNav.classList[action]('nav-main__list--show');
		// lab.src = lab.src;
		if (!arrow1Rotate) {
			if (prevView && prevView === random) {
				random.classList.add('view-option--show');
			}
			if (prevView && prevView !== random && !mainOpen) {
				prevView.classList.remove('view-option--show');
				prevView = random;
				randomOpen = true;
				var video = getRandomVideo();
				displayVideo(video);
				random.classList.add('view-option--show');
			}
		} else if (!mainOpen) {
			displayVideo('');
			random && random.classList.remove('view-option--show');
			random.firstElementChild.src = "";
			if (prevView && prevView !== random) prevView.classList.remove('view-option--show');
			randomOpen = true;
		}

		arrow1Rotate = !arrow1Rotate;
	});

	arrow2.addEventListener('click', function (event) {
		var action = !arrow2Rotate ? 'add' : 'remove';
		event.target.classList[action]('icon-arrow--down--rotate');
		verticalNav.classList[action]('nav--show');
		if (!arrow2Rotate) prevView && prevView.classList.add('view-option--show');else if (arrow2Rotate) {
			if (prevView && prevView !== random) {
				prevView.classList.remove('view-option--show');
			}
			if (mainOpen) {
				lab.src = lab.src;
			}
		}
		arrow2Rotate = !arrow2Rotate;
	});

	mobileArrow.addEventListener('click', function (event) {
		if (randomShowing) random.setAttribute('style', 'transform: translateY(0)');
		var action = !arrow2Rotate ? 'add' : 'remove';
		event.target.classList[action]('icon-arrow--down--rotate');
		verticalNav.classList[action]('nav--show');
		if (!arrow2Rotate) prevView && prevView.classList.add('view-option--show');else if (arrow2Rotate) prevView && prevView.classList.remove('view-option--show');
		arrow2Rotate = !arrow2Rotate;
	});

	// arrowsUp.forEach(arrow => {
	// 	console.log('arrow: ', arrow);
	// 	arrow.addEventListener('click', () => {
	// 		console.log('clicked');
	// 		title.scrollIntoView({behavior: "smooth", block: "start"});
	// 	})
	// });
};

var makeTitleListener = function makeTitleListener() {
	title.addEventListener('click', function () {
		updateTheme();
		window.scrollTo(0, -30);
	});
};

var played = false;
var makeClockListener = function makeClockListener() {
	clock.addEventListener('click', function () {
		if (!played) played = true;
		if (mainOpen) {
			prevView.classList.remove('view-option--show');
			lab.src = lab.src;
			mainOpen = false;
		}
		var video = getRandomVideo();
		var src = played ? video + '?autoplay=1' : video;
		displayVideo(src);
		if (prevView !== random) prevView = random;
		if (!randomOpen) {
			random.classList.add('view-option--show');
			randomOpen = true;
		}
	});

	mobileClock.addEventListener('click', function () {
		if (mainOpen) {
			lab.src = lab.src;
			mainOpen = false;
		}
		randomShowing = true;
		if (!arrow2Rotate) random.setAttribute('style', 'transform: translateY(-200px)');
		if (arrow2Rotate) random.setAttribute('style', 'transform: translateY(0)');
		if (prevView && prevView !== random) prevView.classList.remove('view-option--show');
		if (!played) played = true;
		var video = getRandomVideo();
		var src = played ? video + '?autoplay=1' : video;
		displayVideo(src);
		random.classList.add('view-option--show');
		prevView = random;
	});
};

var videosCopy = [].concat(_toConsumableArray(_videos2.default));
var num = 11;
var getRandomVideo = function getRandomVideo() {
	if (num === 0) {
		num = 11;
		videosCopy = [].concat(_toConsumableArray(_videos2.default));
	}
	var i = Math.floor(Math.random() * num);
	var video = videosCopy[i];
	videosCopy.splice(i, 1);
	num--;
	return video;
};

var displayVideo = function displayVideo(video) {
	random.firstElementChild.src = video;
};

var themes = ['off', 'pink', 'purple', 'image', 'red', 'green', 'blue', 'statue'];
var updateTheme = function updateTheme() {
	var prevTheme = themes[idx];
	if (idx < 7) idx++;else idx = 1;
	var nextTheme = themes[idx];
	theme.classList.remove('theme--' + prevTheme);
	theme.classList.add('theme--' + nextTheme);
};

var init = function init() {
	idx = Math.floor(Math.random() * 5);
	theme.classList.remove('theme--off');
	updateTheme();
	makeArrowListeners();
	makeNavListeners();
	makeTitleListener();
	makeClockListener();
};

init();

},{"./videos":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var videos = ["https://www.youtube.com/embed/uo2r-0zVd6Y", "https://www.youtube.com/embed/DCkqnBWRpLQ", "https://www.youtube.com/embed/9tRtsxKyOI0", "https://www.youtube.com/embed/B3pW5m8prM0", "https://www.youtube.com/embed/WegW6E-vgPY", "https://www.youtube.com/embed/7g5lBMye-C0", "https://www.youtube.com/embed/FhM3F4hpXqg", "https://www.youtube.com/embed/ViTdTSUQokg", "https://www.youtube.com/embed/nz7IImVKvJI", "https://www.youtube.com/embed/rG1Q6QUbdMU", "https://www.youtube.com/embed/W9MIDVNBbKs"];

exports.default = videos;

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvaW5kZXguanMiLCJzcmMvanMvdmlkZW9zLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQTs7Ozs7Ozs7QUFFQSxJQUFNLFFBQVEsU0FBUyxhQUFULENBQXVCLFFBQXZCLENBQWQ7QUFDQSxJQUFNLFFBQVEsU0FBUyxjQUFULENBQXdCLFVBQXhCLENBQWQ7QUFDQSxJQUFNLFNBQVMsU0FBUyxhQUFULENBQXVCLGFBQXZCLENBQWY7QUFDQSxJQUFNLFNBQVMsU0FBUyxhQUFULENBQXVCLG1CQUF2QixDQUFmO0FBQ0EsSUFBTSxXQUFXLFNBQVMsYUFBVCxDQUF1QixXQUF2QixDQUFqQjtBQUNBLFFBQVEsR0FBUixDQUFZLFlBQVosRUFBMEIsUUFBMUI7QUFDQSxJQUFNLGNBQWMsU0FBUyxhQUFULENBQXVCLGtCQUF2QixDQUFwQjtBQUNBLElBQU0sU0FBUyxTQUFTLGNBQVQsQ0FBd0IsUUFBeEIsQ0FBZjtBQUNBLElBQU0sUUFBUSxTQUFTLGNBQVQsQ0FBd0IsT0FBeEIsQ0FBZDtBQUNBLElBQU0sY0FBYyxTQUFTLGNBQVQsQ0FBd0IsZUFBeEIsQ0FBcEI7QUFDQSxJQUFNLGNBQWMsU0FBUyxjQUFULENBQXdCLGVBQXhCLENBQXBCO0FBQ0EsSUFBSSxNQUFNLFNBQVMsY0FBVCxDQUF3QixLQUF4QixDQUFWOztBQUVBLElBQUksZUFBZSxLQUFuQjtBQUNBLElBQUksZUFBZSxLQUFuQjtBQUNBLElBQUksYUFBYSxLQUFqQjtBQUNBLElBQUksV0FBVyxLQUFmO0FBQ0EsSUFBSSxnQkFBZ0IsS0FBcEI7QUFDQSxJQUFJLFlBQUo7QUFDQSxJQUFJLGlCQUFKO0FBQ0EsSUFBSSxpQkFBSjs7QUFFQSxJQUFNLG1CQUFtQixTQUFuQixnQkFBbUIsR0FBTTtBQUM5QixLQUFJLFFBQVEsTUFBTSxJQUFOLENBQVcsU0FBUyxhQUFULENBQXVCLGtCQUF2QixFQUNyQixn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O0FBQ0E7QUFDQSxDQVJEOztBQVVBOzs7Ozs7OztBQzVNQSxJQUFNLFNBQVMsK2VBQWY7O2tCQWVlLE0iLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImltcG9ydCB2aWRlb3MgZnJvbSAnLi92aWRlb3MnO1xuXG5jb25zdCB0aGVtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aGVtZScpO1xuY29uc3QgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanYtdGl0bGUnKTtcbmNvbnN0IGFycm93MSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pY29uLWFycm93Jyk7XG5jb25zdCBhcnJvdzIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaWNvbi1hcnJvdy0tZG93bicpO1xuY29uc3QgYXJyb3dzVXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudXAtYXJyb3cnKTtcbmNvbnNvbGUubG9nKCdhcnJvd3NVcDogJywgYXJyb3dzVXApO1xuY29uc3QgdmVydGljYWxOYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtdmVydGljYWwtbmF2Jyk7XG5jb25zdCByYW5kb20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmFuZG9tJyk7XG5jb25zdCBjbG9jayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjbG9jaycpO1xuY29uc3QgbW9iaWxlQ2xvY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xvY2stLW1vYmlsZScpO1xuY29uc3QgbW9iaWxlQXJyb3cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXJyb3ctLW1vYmlsZScpO1xubGV0IGxhYiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsYWInKTtcblxubGV0IGFycm93MVJvdGF0ZSA9IGZhbHNlO1xubGV0IGFycm93MlJvdGF0ZSA9IGZhbHNlO1xubGV0IHJhbmRvbU9wZW4gPSBmYWxzZTtcbmxldCBtYWluT3BlbiA9IGZhbHNlO1xubGV0IHJhbmRvbVNob3dpbmcgPSBmYWxzZTtcbmxldCBpZHg7XG5sZXQgcHJldkl0ZW07XG5sZXQgcHJldlZpZXc7XG5cbmNvbnN0IG1ha2VOYXZMaXN0ZW5lcnMgPSAoKSA9PiB7XG5cdGxldCBpdGVtcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLXZlcnRpY2FsLW5hdicpXG5cdFx0LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uYXYtbGluaycpKTtcblxuXHRpdGVtcy5mb3JFYWNoKGxpID0+IHtcblx0XHRcblx0XHRsZXQgaWQgPSBsaS5pZCB8fCBudWxsO1xuXHRcdGxpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0aWYgKCFtYWluT3BlbikgbWFpbk9wZW4gPSB0cnVlO1xuXHRcdFx0cmFuZG9tT3BlbiA9IGZhbHNlO1xuXHRcdFx0aWYgKGxpICE9PSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanYtbGFiJykpIGxhYi5zcmMgPSBsYWIuc3JjO1xuXHRcdFx0bGkuY2xhc3NMaXN0LmFkZCgnbmF2LWxpbmstLWFjdGl2ZScpO1xuXHRcdFx0aWYgKHByZXZJdGVtICYmIHByZXZJdGVtICE9PSBsaSkgcHJldkl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnbmF2LWxpbmstLWFjdGl2ZScpO1xuXHRcdFx0cHJldkl0ZW0gPSBsaTtcblxuXHRcdFx0aWYgKCFyYW5kb21PcGVuKSB7XG5cdFx0XHRcdHJhbmRvbS5jbGFzc0xpc3QucmVtb3ZlKCd2aWV3LW9wdGlvbi0tc2hvdycpO1xuXHRcdFx0XHRyYW5kb20uZmlyc3RFbGVtZW50Q2hpbGQuc3JjID0gXCJcIjtcblx0XHRcdH1cblxuXHRcdFx0bGV0IHZpZXcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgYS0ke2lkfWApO1x0XG5cdFx0XHR2aWV3LmNsYXNzTGlzdC5hZGQoJ3ZpZXctb3B0aW9uLS1zaG93Jyk7XG5cdFx0XHRpZiAocHJldlZpZXcgJiYgcHJldlZpZXcgPT09IHJhbmRvbSkgcmFuZG9tLmNsYXNzTGlzdC5yZW1vdmUoJ3ZpZXctb3B0aW9uLS1zaG93Jyk7XG5cdFx0XHRpZiAocHJldlZpZXcgJiYgcHJldlZpZXcgIT09IHZpZXcpIHByZXZWaWV3LmNsYXNzTGlzdC5yZW1vdmUoJ3ZpZXctb3B0aW9uLS1zaG93Jyk7XG5cdFx0XHRwcmV2VmlldyA9IHZpZXc7XG5cdFx0fSlcblx0fSlcbn07XG5cbmNvbnN0IG1ha2VBcnJvd0xpc3RlbmVycyA9ICgpID0+IHtcblx0YXJyb3cxLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG5cdFx0bGV0IGFjdGlvbiA9ICFhcnJvdzFSb3RhdGUgPyAnYWRkJyA6ICdyZW1vdmUnO1xuXHRcdGxldCBob3Jpem9udGFsTmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWhvcml6b250YWwtbmF2Jyk7XG5cdFx0ZXZlbnQudGFyZ2V0LmNsYXNzTGlzdFthY3Rpb25dKCdpY29uLWFycm93LS1yb3RhdGUnKTtcblx0XHRob3Jpem9udGFsTmF2LmNsYXNzTGlzdFthY3Rpb25dKCduYXYtbWFpbl9fbGlzdC0tc2hvdycpO1xuXHRcdC8vIGxhYi5zcmMgPSBsYWIuc3JjO1xuXHRcdGlmICghYXJyb3cxUm90YXRlKSB7XG5cdFx0XHRpZiAocHJldlZpZXcgJiYgcHJldlZpZXcgPT09IHJhbmRvbSkge1xuXHRcdFx0XHRyYW5kb20uY2xhc3NMaXN0LmFkZCgndmlldy1vcHRpb24tLXNob3cnKTtcblx0XHRcdH1cblx0XHRcdGlmIChwcmV2VmlldyAmJiBwcmV2VmlldyAhPT0gcmFuZG9tICYmICFtYWluT3Blbikge1xuXHRcdFx0XHRwcmV2Vmlldy5jbGFzc0xpc3QucmVtb3ZlKCd2aWV3LW9wdGlvbi0tc2hvdycpO1xuXHRcdFx0XHRwcmV2VmlldyA9IHJhbmRvbTtcblx0XHRcdFx0cmFuZG9tT3BlbiA9IHRydWU7XG5cdFx0XHRcdGxldCB2aWRlbyA9IGdldFJhbmRvbVZpZGVvKCk7XG5cdFx0XHRcdGRpc3BsYXlWaWRlbyh2aWRlbyk7XG5cdFx0XHRcdHJhbmRvbS5jbGFzc0xpc3QuYWRkKCd2aWV3LW9wdGlvbi0tc2hvdycpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSBpZiAoIW1haW5PcGVuKSB7XG5cdFx0XHRkaXNwbGF5VmlkZW8oJycpO1xuXHRcdFx0cmFuZG9tICYmIHJhbmRvbS5jbGFzc0xpc3QucmVtb3ZlKCd2aWV3LW9wdGlvbi0tc2hvdycpO1xuXHRcdFx0cmFuZG9tLmZpcnN0RWxlbWVudENoaWxkLnNyYyA9IFwiXCI7XG5cdFx0XHRpZiAocHJldlZpZXcgJiYgcHJldlZpZXcgIT09IHJhbmRvbSkgcHJldlZpZXcuY2xhc3NMaXN0LnJlbW92ZSgndmlldy1vcHRpb24tLXNob3cnKTtcblx0XHRcdHJhbmRvbU9wZW4gPSB0cnVlO1xuXHRcdH0gXG5cblx0XHRhcnJvdzFSb3RhdGUgPSAhYXJyb3cxUm90YXRlO1xuXHR9KTtcblxuXHRhcnJvdzIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcblx0XHRsZXQgYWN0aW9uID0gIWFycm93MlJvdGF0ZSA/ICdhZGQnIDogJ3JlbW92ZSc7XG5cdFx0ZXZlbnQudGFyZ2V0LmNsYXNzTGlzdFthY3Rpb25dKCdpY29uLWFycm93LS1kb3duLS1yb3RhdGUnKTtcblx0XHR2ZXJ0aWNhbE5hdi5jbGFzc0xpc3RbYWN0aW9uXSgnbmF2LS1zaG93Jyk7XG5cdFx0aWYgKCFhcnJvdzJSb3RhdGUpXG5cdFx0XHRwcmV2VmlldyAmJiBwcmV2Vmlldy5jbGFzc0xpc3QuYWRkKCd2aWV3LW9wdGlvbi0tc2hvdycpO1xuXHRcdGVsc2UgaWYgKGFycm93MlJvdGF0ZSkge1xuXHRcdFx0aWYgKHByZXZWaWV3ICYmIHByZXZWaWV3ICE9PSByYW5kb20pIHtcblx0XHRcdFx0cHJldlZpZXcuY2xhc3NMaXN0LnJlbW92ZSgndmlldy1vcHRpb24tLXNob3cnKTtcblx0XHRcdH1cblx0XHRcdGlmIChtYWluT3Blbikge1xuXHRcdFx0XHRsYWIuc3JjID0gbGFiLnNyYztcblx0XHRcdH0gXG5cdFx0fVxuXHRcdGFycm93MlJvdGF0ZSA9ICFhcnJvdzJSb3RhdGU7XG5cdH0pO1xuXG5cdG1vYmlsZUFycm93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG5cdFx0aWYgKHJhbmRvbVNob3dpbmcpIHJhbmRvbS5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ3RyYW5zZm9ybTogdHJhbnNsYXRlWSgwKScpO1xuXHRcdGxldCBhY3Rpb24gPSAhYXJyb3cyUm90YXRlID8gJ2FkZCcgOiAncmVtb3ZlJztcblx0XHRldmVudC50YXJnZXQuY2xhc3NMaXN0W2FjdGlvbl0oJ2ljb24tYXJyb3ctLWRvd24tLXJvdGF0ZScpO1xuXHRcdHZlcnRpY2FsTmF2LmNsYXNzTGlzdFthY3Rpb25dKCduYXYtLXNob3cnKTtcblx0XHRpZiAoIWFycm93MlJvdGF0ZSlcblx0XHRcdHByZXZWaWV3ICYmIHByZXZWaWV3LmNsYXNzTGlzdC5hZGQoJ3ZpZXctb3B0aW9uLS1zaG93Jyk7XG5cdFx0ZWxzZSBpZiAoYXJyb3cyUm90YXRlKSBcblx0XHRcdHByZXZWaWV3ICYmIHByZXZWaWV3LmNsYXNzTGlzdC5yZW1vdmUoJ3ZpZXctb3B0aW9uLS1zaG93Jyk7XG5cdFx0YXJyb3cyUm90YXRlID0gIWFycm93MlJvdGF0ZTtcblx0fSk7XG5cblx0Ly8gYXJyb3dzVXAuZm9yRWFjaChhcnJvdyA9PiB7XG5cdC8vIFx0Y29uc29sZS5sb2coJ2Fycm93OiAnLCBhcnJvdyk7XG5cdC8vIFx0YXJyb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdC8vIFx0XHRjb25zb2xlLmxvZygnY2xpY2tlZCcpO1xuXHQvLyBcdFx0dGl0bGUuc2Nyb2xsSW50b1ZpZXcoe2JlaGF2aW9yOiBcInNtb290aFwiLCBibG9jazogXCJzdGFydFwifSk7XG5cdC8vIFx0fSlcblx0Ly8gfSk7XG59O1xuXG5cbmNvbnN0IG1ha2VUaXRsZUxpc3RlbmVyID0gKCkgPT4ge1xuXHR0aXRsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblx0XHR1cGRhdGVUaGVtZSgpO1xuXHRcdHdpbmRvdy5zY3JvbGxUbygwLCAtMzApO1xuXHR9KVxufTtcblxubGV0IHBsYXllZCA9IGZhbHNlO1xuY29uc3QgbWFrZUNsb2NrTGlzdGVuZXIgPSAoKSA9PiB7XG5cdGNsb2NrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHRcdGlmICghcGxheWVkKSBwbGF5ZWQgPSB0cnVlO1xuXHRcdGlmIChtYWluT3Blbikge1xuXHRcdFx0cHJldlZpZXcuY2xhc3NMaXN0LnJlbW92ZSgndmlldy1vcHRpb24tLXNob3cnKTtcblx0XHRcdGxhYi5zcmMgPSBsYWIuc3JjO1xuXHRcdFx0bWFpbk9wZW4gPSBmYWxzZTtcblx0XHR9XG5cdFx0bGV0IHZpZGVvID0gZ2V0UmFuZG9tVmlkZW8oKTtcblx0XHRsZXQgc3JjID0gcGxheWVkID8gYCR7dmlkZW99P2F1dG9wbGF5PTFgIDogdmlkZW87XG5cdFx0ZGlzcGxheVZpZGVvKHNyYyk7XG5cdFx0aWYgKHByZXZWaWV3ICE9PSByYW5kb20pIHByZXZWaWV3ID0gcmFuZG9tO1xuXHRcdGlmICghcmFuZG9tT3Blbikge1xuXHRcdFx0cmFuZG9tLmNsYXNzTGlzdC5hZGQoJ3ZpZXctb3B0aW9uLS1zaG93Jyk7XG5cdFx0XHRyYW5kb21PcGVuID0gdHJ1ZTtcblx0XHR9XG5cdH0pXG5cblx0bW9iaWxlQ2xvY2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdFx0aWYgKG1haW5PcGVuKSB7XG5cdFx0XHRsYWIuc3JjID0gbGFiLnNyYztcblx0XHRcdG1haW5PcGVuID0gZmFsc2U7XG5cdFx0fVxuXHRcdHJhbmRvbVNob3dpbmcgPSB0cnVlO1xuXHRcdGlmICghYXJyb3cyUm90YXRlKSByYW5kb20uc2V0QXR0cmlidXRlKCdzdHlsZScsICd0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMHB4KScpO1xuXHRcdGlmIChhcnJvdzJSb3RhdGUpIHJhbmRvbS5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ3RyYW5zZm9ybTogdHJhbnNsYXRlWSgwKScpO1xuXHRcdGlmIChwcmV2VmlldyAmJiBwcmV2VmlldyAhPT0gcmFuZG9tKSBwcmV2Vmlldy5jbGFzc0xpc3QucmVtb3ZlKCd2aWV3LW9wdGlvbi0tc2hvdycpO1xuXHRcdGlmICghcGxheWVkKSBwbGF5ZWQgPSB0cnVlO1xuXHRcdGxldCB2aWRlbyA9IGdldFJhbmRvbVZpZGVvKCk7XG5cdFx0bGV0IHNyYyA9IHBsYXllZCA/IGAke3ZpZGVvfT9hdXRvcGxheT0xYCA6IHZpZGVvO1xuXHRcdGRpc3BsYXlWaWRlbyhzcmMpO1xuXHRcdHJhbmRvbS5jbGFzc0xpc3QuYWRkKCd2aWV3LW9wdGlvbi0tc2hvdycpO1xuXHRcdHByZXZWaWV3ID0gcmFuZG9tO1xuXHR9KVxufTtcblxubGV0IHZpZGVvc0NvcHkgPSBbLi4udmlkZW9zXTtcbmxldCBudW0gPSAxMTtcbmNvbnN0IGdldFJhbmRvbVZpZGVvID0gKCkgPT4ge1xuXHRpZiAobnVtID09PSAwKSB7XG5cdFx0bnVtID0gMTE7XG5cdFx0dmlkZW9zQ29weSA9IFsuLi52aWRlb3NdO1xuXHR9XG5cdGxldCBpID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbnVtKTtcblx0bGV0IHZpZGVvID0gdmlkZW9zQ29weVtpXTtcblx0dmlkZW9zQ29weS5zcGxpY2UoaSwgMSk7XG5cdG51bS0tXG5cdHJldHVybiB2aWRlbztcbn07XG5cbmNvbnN0IGRpc3BsYXlWaWRlbyA9ICh2aWRlbykgPT4ge1xuXHRyYW5kb20uZmlyc3RFbGVtZW50Q2hpbGQuc3JjID0gdmlkZW87XG59XG5cbmNvbnN0IHRoZW1lcyA9IFsnb2ZmJywgJ3BpbmsnLCAncHVycGxlJywgJ2ltYWdlJywgJ3JlZCcsICAnZ3JlZW4nLCAnYmx1ZScsICdzdGF0dWUnXTtcbmNvbnN0IHVwZGF0ZVRoZW1lID0gKCkgPT4ge1xuXHRsZXQgcHJldlRoZW1lID0gdGhlbWVzW2lkeF07XG5cdGlmIChpZHggPCA3KSBpZHgrK1xuXHRlbHNlIGlkeCA9IDE7XG5cdGxldCBuZXh0VGhlbWUgPSB0aGVtZXNbaWR4XTtcblx0dGhlbWUuY2xhc3NMaXN0LnJlbW92ZShgdGhlbWUtLSR7cHJldlRoZW1lfWApO1xuXHR0aGVtZS5jbGFzc0xpc3QuYWRkKGB0aGVtZS0tJHtuZXh0VGhlbWV9YCk7XG59O1xuXG5jb25zdCBpbml0ID0gKCkgPT4ge1xuXHRpZHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KTtcblx0dGhlbWUuY2xhc3NMaXN0LnJlbW92ZShgdGhlbWUtLW9mZmApO1xuXHR1cGRhdGVUaGVtZSgpO1xuXHRtYWtlQXJyb3dMaXN0ZW5lcnMoKTtcblx0bWFrZU5hdkxpc3RlbmVycygpO1xuXHRtYWtlVGl0bGVMaXN0ZW5lcigpO1xuXHRtYWtlQ2xvY2tMaXN0ZW5lcigpO1xufTtcblxuaW5pdCgpOyIsImNvbnN0IHZpZGVvcyA9IFtcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL3VvMnItMHpWZDZZYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL0RDa3FuQldScExRYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLzl0UnRzeEt5T0kwYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL0IzcFc1bThwck0wYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1dlZ1c2RS12Z1BZYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLzdnNWxCTXllLUMwYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL0ZoTTNGNGhwWHFnYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1ZpVGRUU1VRb2tnYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL256N0lJbVZLdkpJYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL3JHMVE2UVViZE1VYCxcblx0YGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1c5TUlEVk5CYktzYCxcblxuXTtcblxuZXhwb3J0IGRlZmF1bHQgdmlkZW9zOyJdLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKemNtTXZhbk12YVc1a1pYZ3Vhbk1pTENKemNtTXZhbk12ZG1sa1pXOXpMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk96czdRVU5CUVRzN096czdPenM3UVVGRlFTeEpRVUZOTEZGQlFWRXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xGRkJRWFpDTEVOQlFXUTdRVUZEUVN4SlFVRk5MRkZCUVZFc1UwRkJVeXhqUVVGVUxFTkJRWGRDTEZWQlFYaENMRU5CUVdRN1FVRkRRU3hKUVVGTkxGTkJRVk1zVTBGQlV5eGhRVUZVTEVOQlFYVkNMR0ZCUVhaQ0xFTkJRV1k3UVVGRFFTeEpRVUZOTEZOQlFWTXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHMUNRVUYyUWl4RFFVRm1PMEZCUTBFc1NVRkJUU3hYUVVGWExGTkJRVk1zWVVGQlZDeERRVUYxUWl4WFFVRjJRaXhEUVVGcVFqdEJRVU5CTEZGQlFWRXNSMEZCVWl4RFFVRlpMRmxCUVZvc1JVRkJNRUlzVVVGQk1VSTdRVUZEUVN4SlFVRk5MR05CUVdNc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEd0Q1FVRjJRaXhEUVVGd1FqdEJRVU5CTEVsQlFVMHNVMEZCVXl4VFFVRlRMR05CUVZRc1EwRkJkMElzVVVGQmVFSXNRMEZCWmp0QlFVTkJMRWxCUVUwc1VVRkJVU3hUUVVGVExHTkJRVlFzUTBGQmQwSXNUMEZCZUVJc1EwRkJaRHRCUVVOQkxFbEJRVTBzWTBGQll5eFRRVUZUTEdOQlFWUXNRMEZCZDBJc1pVRkJlRUlzUTBGQmNFSTdRVUZEUVN4SlFVRk5MR05CUVdNc1UwRkJVeXhqUVVGVUxFTkJRWGRDTEdWQlFYaENMRU5CUVhCQ08wRkJRMEVzU1VGQlNTeE5RVUZOTEZOQlFWTXNZMEZCVkN4RFFVRjNRaXhMUVVGNFFpeERRVUZXT3p0QlFVVkJMRWxCUVVrc1pVRkJaU3hMUVVGdVFqdEJRVU5CTEVsQlFVa3NaVUZCWlN4TFFVRnVRanRCUVVOQkxFbEJRVWtzWVVGQllTeExRVUZxUWp0QlFVTkJMRWxCUVVrc1YwRkJWeXhMUVVGbU8wRkJRMEVzU1VGQlNTeG5Ra0ZCWjBJc1MwRkJjRUk3UVVGRFFTeEpRVUZKTEZsQlFVbzdRVUZEUVN4SlFVRkpMR2xDUVVGS08wRkJRMEVzU1VGQlNTeHBRa0ZCU2pzN1FVRkZRU3hKUVVGTkxHMUNRVUZ0UWl4VFFVRnVRaXhuUWtGQmJVSXNSMEZCVFR0QlFVTTVRaXhMUVVGSkxGRkJRVkVzVFVGQlRTeEpRVUZPTEVOQlFWY3NVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHdENRVUYyUWl4RlFVTnlRaXhuUWtGRWNVSXNRMEZEU2l4WFFVUkpMRU5CUVZnc1EwRkJXanM3UVVGSFFTeFBRVUZOTEU5QlFVNHNRMEZCWXl4alFVRk5PenRCUVVWdVFpeE5RVUZKTEV0QlFVc3NSMEZCUnl4RlFVRklMRWxCUVZNc1NVRkJiRUk3UVVGRFFTeExRVUZITEdkQ1FVRklMRU5CUVc5Q0xFOUJRWEJDTEVWQlFUWkNMRmxCUVUwN1FVRkRiRU1zVDBGQlNTeERRVUZETEZGQlFVd3NSVUZCWlN4WFFVRlhMRWxCUVZnN1FVRkRaaXhuUWtGQllTeExRVUZpTzBGQlEwRXNUMEZCU1N4UFFVRlBMRk5CUVZNc1kwRkJWQ3hEUVVGM1FpeFJRVUY0UWl4RFFVRllMRVZCUVRoRExFbEJRVWtzUjBGQlNpeEhRVUZWTEVsQlFVa3NSMEZCWkR0QlFVTTVReXhOUVVGSExGTkJRVWdzUTBGQllTeEhRVUZpTEVOQlFXbENMR3RDUVVGcVFqdEJRVU5CTEU5QlFVa3NXVUZCV1N4aFFVRmhMRVZCUVRkQ0xFVkJRV2xETEZOQlFWTXNVMEZCVkN4RFFVRnRRaXhOUVVGdVFpeERRVUV3UWl4clFrRkJNVUk3UVVGRGFrTXNZMEZCVnl4RlFVRllPenRCUVVWQkxFOUJRVWtzUTBGQlF5eFZRVUZNTEVWQlFXbENPMEZCUTJoQ0xGZEJRVThzVTBGQlVDeERRVUZwUWl4TlFVRnFRaXhEUVVGM1FpeHRRa0ZCZUVJN1FVRkRRU3hYUVVGUExHbENRVUZRTEVOQlFYbENMRWRCUVhwQ0xFZEJRU3RDTEVWQlFTOUNPMEZCUTBFN08wRkJSVVFzVDBGQlNTeFBRVUZQTEZOQlFWTXNZMEZCVkN4UlFVRTJRaXhGUVVFM1FpeERRVUZZTzBGQlEwRXNVVUZCU3l4VFFVRk1MRU5CUVdVc1IwRkJaaXhEUVVGdFFpeHRRa0ZCYmtJN1FVRkRRU3hQUVVGSkxGbEJRVmtzWVVGQllTeE5RVUUzUWl4RlFVRnhReXhQUVVGUExGTkJRVkFzUTBGQmFVSXNUVUZCYWtJc1EwRkJkMElzYlVKQlFYaENPMEZCUTNKRExFOUJRVWtzV1VGQldTeGhRVUZoTEVsQlFUZENMRVZCUVcxRExGTkJRVk1zVTBGQlZDeERRVUZ0UWl4TlFVRnVRaXhEUVVFd1FpeHRRa0ZCTVVJN1FVRkRia01zWTBGQlZ5eEpRVUZZTzBGQlEwRXNSMEZzUWtRN1FVRnRRa0VzUlVGMFFrUTdRVUYxUWtFc1EwRXpRa1E3TzBGQk5rSkJMRWxCUVUwc2NVSkJRWEZDTEZOQlFYSkNMR3RDUVVGeFFpeEhRVUZOTzBGQlEyaERMRkZCUVU4c1owSkJRVkFzUTBGQmQwSXNUMEZCZUVJc1JVRkJhVU1zVlVGQlF5eExRVUZFTEVWQlFWYzdRVUZETTBNc1RVRkJTU3hUUVVGVExFTkJRVU1zV1VGQlJDeEhRVUZuUWl4TFFVRm9RaXhIUVVGM1FpeFJRVUZ5UXp0QlFVTkJMRTFCUVVrc1owSkJRV2RDTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXh2UWtGQmRrSXNRMEZCY0VJN1FVRkRRU3hSUVVGTkxFMUJRVTRzUTBGQllTeFRRVUZpTEVOQlFYVkNMRTFCUVhaQ0xFVkJRU3RDTEc5Q1FVRXZRanRCUVVOQkxHZENRVUZqTEZOQlFXUXNRMEZCZDBJc1RVRkJlRUlzUlVGQlowTXNjMEpCUVdoRE8wRkJRMEU3UVVGRFFTeE5RVUZKTEVOQlFVTXNXVUZCVEN4RlFVRnRRanRCUVVOc1FpeFBRVUZKTEZsQlFWa3NZVUZCWVN4TlFVRTNRaXhGUVVGeFF6dEJRVU53UXl4WFFVRlBMRk5CUVZBc1EwRkJhVUlzUjBGQmFrSXNRMEZCY1VJc2JVSkJRWEpDTzBGQlEwRTdRVUZEUkN4UFFVRkpMRmxCUVZrc1lVRkJZU3hOUVVGNlFpeEpRVUZ0UXl4RFFVRkRMRkZCUVhoRExFVkJRV3RFTzBGQlEycEVMR0ZCUVZNc1UwRkJWQ3hEUVVGdFFpeE5RVUZ1UWl4RFFVRXdRaXh0UWtGQk1VSTdRVUZEUVN4bFFVRlhMRTFCUVZnN1FVRkRRU3hwUWtGQllTeEpRVUZpTzBGQlEwRXNVVUZCU1N4UlFVRlJMR2RDUVVGYU8wRkJRMEVzYVVKQlFXRXNTMEZCWWp0QlFVTkJMRmRCUVU4c1UwRkJVQ3hEUVVGcFFpeEhRVUZxUWl4RFFVRnhRaXh0UWtGQmNrSTdRVUZEUVR0QlFVTkVMRWRCV2tRc1RVRlpUeXhKUVVGSkxFTkJRVU1zVVVGQlRDeEZRVUZsTzBGQlEzSkNMR2RDUVVGaExFVkJRV0k3UVVGRFFTeGhRVUZWTEU5QlFVOHNVMEZCVUN4RFFVRnBRaXhOUVVGcVFpeERRVUYzUWl4dFFrRkJlRUlzUTBGQlZqdEJRVU5CTEZWQlFVOHNhVUpCUVZBc1EwRkJlVUlzUjBGQmVrSXNSMEZCSzBJc1JVRkJMMEk3UVVGRFFTeFBRVUZKTEZsQlFWa3NZVUZCWVN4TlFVRTNRaXhGUVVGeFF5eFRRVUZUTEZOQlFWUXNRMEZCYlVJc1RVRkJia0lzUTBGQk1FSXNiVUpCUVRGQ08wRkJRM0pETEdkQ1FVRmhMRWxCUVdJN1FVRkRRVHM3UVVGRlJDeHBRa0ZCWlN4RFFVRkRMRmxCUVdoQ08wRkJRMEVzUlVFelFrUTdPMEZCTmtKQkxGRkJRVThzWjBKQlFWQXNRMEZCZDBJc1QwRkJlRUlzUlVGQmFVTXNWVUZCUXl4TFFVRkVMRVZCUVZjN1FVRkRNME1zVFVGQlNTeFRRVUZUTEVOQlFVTXNXVUZCUkN4SFFVRm5RaXhMUVVGb1FpeEhRVUYzUWl4UlFVRnlRenRCUVVOQkxGRkJRVTBzVFVGQlRpeERRVUZoTEZOQlFXSXNRMEZCZFVJc1RVRkJka0lzUlVGQkswSXNNRUpCUVM5Q08wRkJRMEVzWTBGQldTeFRRVUZhTEVOQlFYTkNMRTFCUVhSQ0xFVkJRVGhDTEZkQlFUbENPMEZCUTBFc1RVRkJTU3hEUVVGRExGbEJRVXdzUlVGRFF5eFpRVUZaTEZOQlFWTXNVMEZCVkN4RFFVRnRRaXhIUVVGdVFpeERRVUYxUWl4dFFrRkJka0lzUTBGQldpeERRVVJFTEV0QlJVc3NTVUZCU1N4WlFVRktMRVZCUVd0Q08wRkJRM1JDTEU5QlFVa3NXVUZCV1N4aFFVRmhMRTFCUVRkQ0xFVkJRWEZETzBGQlEzQkRMR0ZCUVZNc1UwRkJWQ3hEUVVGdFFpeE5RVUZ1UWl4RFFVRXdRaXh0UWtGQk1VSTdRVUZEUVR0QlFVTkVMRTlCUVVrc1VVRkJTaXhGUVVGak8wRkJRMklzVVVGQlNTeEhRVUZLTEVkQlFWVXNTVUZCU1N4SFFVRmtPMEZCUTBFN1FVRkRSRHRCUVVORUxHbENRVUZsTEVOQlFVTXNXVUZCYUVJN1FVRkRRU3hGUVdaRU96dEJRV2xDUVN4aFFVRlpMR2RDUVVGYUxFTkJRVFpDTEU5QlFUZENMRVZCUVhORExGVkJRVU1zUzBGQlJDeEZRVUZYTzBGQlEyaEVMRTFCUVVrc1lVRkJTaXhGUVVGdFFpeFBRVUZQTEZsQlFWQXNRMEZCYjBJc1QwRkJjRUlzUlVGQk5rSXNNRUpCUVRkQ08wRkJRMjVDTEUxQlFVa3NVMEZCVXl4RFFVRkRMRmxCUVVRc1IwRkJaMElzUzBGQmFFSXNSMEZCZDBJc1VVRkJja003UVVGRFFTeFJRVUZOTEUxQlFVNHNRMEZCWVN4VFFVRmlMRU5CUVhWQ0xFMUJRWFpDTEVWQlFTdENMREJDUVVFdlFqdEJRVU5CTEdOQlFWa3NVMEZCV2l4RFFVRnpRaXhOUVVGMFFpeEZRVUU0UWl4WFFVRTVRanRCUVVOQkxFMUJRVWtzUTBGQlF5eFpRVUZNTEVWQlEwTXNXVUZCV1N4VFFVRlRMRk5CUVZRc1EwRkJiVUlzUjBGQmJrSXNRMEZCZFVJc2JVSkJRWFpDTEVOQlFWb3NRMEZFUkN4TFFVVkxMRWxCUVVrc1dVRkJTaXhGUVVOS0xGbEJRVmtzVTBGQlV5eFRRVUZVTEVOQlFXMUNMRTFCUVc1Q0xFTkJRVEJDTEcxQ1FVRXhRaXhEUVVGYU8wRkJRMFFzYVVKQlFXVXNRMEZCUXl4WlFVRm9RanRCUVVOQkxFVkJWa1E3TzBGQldVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeERRV3hGUkRzN1FVRnhSVUVzU1VGQlRTeHZRa0ZCYjBJc1UwRkJjRUlzYVVKQlFXOUNMRWRCUVUwN1FVRkRMMElzVDBGQlRTeG5Ra0ZCVGl4RFFVRjFRaXhQUVVGMlFpeEZRVUZuUXl4WlFVRk5PMEZCUTNKRE8wRkJRMEVzVTBGQlR5eFJRVUZRTEVOQlFXZENMRU5CUVdoQ0xFVkJRVzFDTEVOQlFVTXNSVUZCY0VJN1FVRkRRU3hGUVVoRU8wRkJTVUVzUTBGTVJEczdRVUZQUVN4SlFVRkpMRk5CUVZNc1MwRkJZanRCUVVOQkxFbEJRVTBzYjBKQlFXOUNMRk5CUVhCQ0xHbENRVUZ2UWl4SFFVRk5PMEZCUXk5Q0xFOUJRVTBzWjBKQlFVNHNRMEZCZFVJc1QwRkJka0lzUlVGQlowTXNXVUZCVFR0QlFVTnlReXhOUVVGSkxFTkJRVU1zVFVGQlRDeEZRVUZoTEZOQlFWTXNTVUZCVkR0QlFVTmlMRTFCUVVrc1VVRkJTaXhGUVVGak8wRkJRMklzV1VGQlV5eFRRVUZVTEVOQlFXMUNMRTFCUVc1Q0xFTkJRVEJDTEcxQ1FVRXhRanRCUVVOQkxFOUJRVWtzUjBGQlNpeEhRVUZWTEVsQlFVa3NSMEZCWkR0QlFVTkJMR05CUVZjc1MwRkJXRHRCUVVOQk8wRkJRMFFzVFVGQlNTeFJRVUZSTEdkQ1FVRmFPMEZCUTBFc1RVRkJTU3hOUVVGTkxGTkJRVmtzUzBGQldpeHRRa0ZCYVVNc1MwRkJNME03UVVGRFFTeGxRVUZoTEVkQlFXSTdRVUZEUVN4TlFVRkpMR0ZCUVdFc1RVRkJha0lzUlVGQmVVSXNWMEZCVnl4TlFVRllPMEZCUTNwQ0xFMUJRVWtzUTBGQlF5eFZRVUZNTEVWQlFXbENPMEZCUTJoQ0xGVkJRVThzVTBGQlVDeERRVUZwUWl4SFFVRnFRaXhEUVVGeFFpeHRRa0ZCY2tJN1FVRkRRU3huUWtGQllTeEpRVUZpTzBGQlEwRTdRVUZEUkN4RlFXWkVPenRCUVdsQ1FTeGhRVUZaTEdkQ1FVRmFMRU5CUVRaQ0xFOUJRVGRDTEVWQlFYTkRMRmxCUVUwN1FVRkRNME1zVFVGQlNTeFJRVUZLTEVWQlFXTTdRVUZEWWl4UFFVRkpMRWRCUVVvc1IwRkJWU3hKUVVGSkxFZEJRV1E3UVVGRFFTeGpRVUZYTEV0QlFWZzdRVUZEUVR0QlFVTkVMR3RDUVVGblFpeEpRVUZvUWp0QlFVTkJMRTFCUVVrc1EwRkJReXhaUVVGTUxFVkJRVzFDTEU5QlFVOHNXVUZCVUN4RFFVRnZRaXhQUVVGd1FpeEZRVUUyUWl3clFrRkJOMEk3UVVGRGJrSXNUVUZCU1N4WlFVRktMRVZCUVd0Q0xFOUJRVThzV1VGQlVDeERRVUZ2UWl4UFFVRndRaXhGUVVFMlFpd3dRa0ZCTjBJN1FVRkRiRUlzVFVGQlNTeFpRVUZaTEdGQlFXRXNUVUZCTjBJc1JVRkJjVU1zVTBGQlV5eFRRVUZVTEVOQlFXMUNMRTFCUVc1Q0xFTkJRVEJDTEcxQ1FVRXhRanRCUVVOeVF5eE5RVUZKTEVOQlFVTXNUVUZCVEN4RlFVRmhMRk5CUVZNc1NVRkJWRHRCUVVOaUxFMUJRVWtzVVVGQlVTeG5Ra0ZCV2p0QlFVTkJMRTFCUVVrc1RVRkJUU3hUUVVGWkxFdEJRVm9zYlVKQlFXbERMRXRCUVRORE8wRkJRMEVzWlVGQllTeEhRVUZpTzBGQlEwRXNVMEZCVHl4VFFVRlFMRU5CUVdsQ0xFZEJRV3BDTEVOQlFYRkNMRzFDUVVGeVFqdEJRVU5CTEdGQlFWY3NUVUZCV0R0QlFVTkJMRVZCWmtRN1FVRm5Ra0VzUTBGc1EwUTdPMEZCYjBOQkxFbEJRVWtzTUVOQlFXbENMR2RDUVVGcVFpeEZRVUZLTzBGQlEwRXNTVUZCU1N4TlFVRk5MRVZCUVZZN1FVRkRRU3hKUVVGTkxHbENRVUZwUWl4VFFVRnFRaXhqUVVGcFFpeEhRVUZOTzBGQlF6VkNMRXRCUVVrc1VVRkJVU3hEUVVGYUxFVkJRV1U3UVVGRFpDeFJRVUZOTEVWQlFVNDdRVUZEUVN3MFEwRkJhVUlzWjBKQlFXcENPMEZCUTBFN1FVRkRSQ3hMUVVGSkxFbEJRVWtzUzBGQlN5eExRVUZNTEVOQlFWY3NTMEZCU3l4TlFVRk1MRXRCUVdkQ0xFZEJRVE5DTEVOQlFWSTdRVUZEUVN4TFFVRkpMRkZCUVZFc1YwRkJWeXhEUVVGWUxFTkJRVm83UVVGRFFTeFpRVUZYTEUxQlFWZ3NRMEZCYTBJc1EwRkJiRUlzUlVGQmNVSXNRMEZCY2tJN1FVRkRRVHRCUVVOQkxGRkJRVThzUzBGQlVEdEJRVU5CTEVOQlZrUTdPMEZCV1VFc1NVRkJUU3hsUVVGbExGTkJRV1lzV1VGQlpTeERRVUZETEV0QlFVUXNSVUZCVnp0QlFVTXZRaXhSUVVGUExHbENRVUZRTEVOQlFYbENMRWRCUVhwQ0xFZEJRU3RDTEV0QlFTOUNPMEZCUTBFc1EwRkdSRHM3UVVGSlFTeEpRVUZOTEZOQlFWTXNRMEZCUXl4TFFVRkVMRVZCUVZFc1RVRkJVaXhGUVVGblFpeFJRVUZvUWl4RlFVRXdRaXhQUVVFeFFpeEZRVUZ0UXl4TFFVRnVReXhGUVVFeVF5eFBRVUV6UXl4RlFVRnZSQ3hOUVVGd1JDeEZRVUUwUkN4UlFVRTFSQ3hEUVVGbU8wRkJRMEVzU1VGQlRTeGpRVUZqTEZOQlFXUXNWMEZCWXl4SFFVRk5PMEZCUTNwQ0xFdEJRVWtzV1VGQldTeFBRVUZQTEVkQlFWQXNRMEZCYUVJN1FVRkRRU3hMUVVGSkxFMUJRVTBzUTBGQlZpeEZRVUZoTEUxQlFXSXNTMEZEU3l4TlFVRk5MRU5CUVU0N1FVRkRUQ3hMUVVGSkxGbEJRVmtzVDBGQlR5eEhRVUZRTEVOQlFXaENPMEZCUTBFc1QwRkJUU3hUUVVGT0xFTkJRV2RDTEUxQlFXaENMR0ZCUVdsRExGTkJRV3BETzBGQlEwRXNUMEZCVFN4VFFVRk9MRU5CUVdkQ0xFZEJRV2hDTEdGQlFUaENMRk5CUVRsQ08wRkJRMEVzUTBGUVJEczdRVUZUUVN4SlFVRk5MRTlCUVU4c1UwRkJVQ3hKUVVGUExFZEJRVTA3UVVGRGJFSXNUMEZCVFN4TFFVRkxMRXRCUVV3c1EwRkJWeXhMUVVGTExFMUJRVXdzUzBGQlowSXNRMEZCTTBJc1EwRkJUanRCUVVOQkxFOUJRVTBzVTBGQlRpeERRVUZuUWl4TlFVRm9RanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RFFWSkVPenRCUVZWQk96czdPenM3T3p0QlF6Vk5RU3hKUVVGTkxGTkJRVk1zSzJWQlFXWTdPMnRDUVdWbExFMGlMQ0ptYVd4bElqb2laMlZ1WlhKaGRHVmtMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlobWRXNWpkR2x2YmlncGUyWjFibU4wYVc5dUlISW9aU3h1TEhRcGUyWjFibU4wYVc5dUlHOG9hU3htS1h0cFppZ2hibHRwWFNsN2FXWW9JV1ZiYVYwcGUzWmhjaUJqUFZ3aVpuVnVZM1JwYjI1Y0lqMDlkSGx3Wlc5bUlISmxjWFZwY21VbUpuSmxjWFZwY21VN2FXWW9JV1ltSm1NcGNtVjBkWEp1SUdNb2FTd2hNQ2s3YVdZb2RTbHlaWFIxY200Z2RTaHBMQ0V3S1R0MllYSWdZVDF1WlhjZ1JYSnliM0lvWENKRFlXNXViM1FnWm1sdVpDQnRiMlIxYkdVZ0oxd2lLMmtyWENJblhDSXBPM1JvY205M0lHRXVZMjlrWlQxY0lrMVBSRlZNUlY5T1QxUmZSazlWVGtSY0lpeGhmWFpoY2lCd1BXNWJhVjA5ZTJWNGNHOXlkSE02ZTMxOU8yVmJhVjFiTUYwdVkyRnNiQ2h3TG1WNGNHOXlkSE1zWm5WdVkzUnBiMjRvY2lsN2RtRnlJRzQ5WlZ0cFhWc3hYVnR5WFR0eVpYUjFjbTRnYnlodWZIeHlLWDBzY0N4d0xtVjRjRzl5ZEhNc2NpeGxMRzRzZENsOWNtVjBkWEp1SUc1YmFWMHVaWGh3YjNKMGMzMW1iM0lvZG1GeUlIVTlYQ0ptZFc1amRHbHZibHdpUFQxMGVYQmxiMllnY21WeGRXbHlaU1ltY21WeGRXbHlaU3hwUFRBN2FUeDBMbXhsYm1kMGFEdHBLeXNwYnloMFcybGRLVHR5WlhSMWNtNGdiMzF5WlhSMWNtNGdjbjBwS0NraUxDSnBiWEJ2Y25RZ2RtbGtaVzl6SUdaeWIyMGdKeTR2ZG1sa1pXOXpKenRjYmx4dVkyOXVjM1FnZEdobGJXVWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VkR2hsYldVbktUdGNibU52Ym5OMElIUnBkR3hsSUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvSjJwMkxYUnBkR3hsSnlrN1hHNWpiMjV6ZENCaGNuSnZkekVnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1YVdOdmJpMWhjbkp2ZHljcE8xeHVZMjl1YzNRZ1lYSnliM2N5SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG1samIyNHRZWEp5YjNjdExXUnZkMjRuS1R0Y2JtTnZibk4wSUdGeWNtOTNjMVZ3SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG5Wd0xXRnljbTkzSnlrN1hHNWpiMjV6YjJ4bExteHZaeWduWVhKeWIzZHpWWEE2SUNjc0lHRnljbTkzYzFWd0tUdGNibU52Ym5OMElIWmxjblJwWTJGc1RtRjJJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbXB6TFhabGNuUnBZMkZzTFc1aGRpY3BPMXh1WTI5dWMzUWdjbUZ1Wkc5dElEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb0ozSmhibVJ2YlNjcE8xeHVZMjl1YzNRZ1kyeHZZMnNnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2duWTJ4dlkyc25LVHRjYm1OdmJuTjBJRzF2WW1sc1pVTnNiMk5ySUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvSjJOc2IyTnJMUzF0YjJKcGJHVW5LVHRjYm1OdmJuTjBJRzF2WW1sc1pVRnljbTkzSUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvSjJGeWNtOTNMUzF0YjJKcGJHVW5LVHRjYm14bGRDQnNZV0lnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2duYkdGaUp5azdYRzVjYm14bGRDQmhjbkp2ZHpGU2IzUmhkR1VnUFNCbVlXeHpaVHRjYm14bGRDQmhjbkp2ZHpKU2IzUmhkR1VnUFNCbVlXeHpaVHRjYm14bGRDQnlZVzVrYjIxUGNHVnVJRDBnWm1Gc2MyVTdYRzVzWlhRZ2JXRnBiazl3Wlc0Z1BTQm1ZV3h6WlR0Y2JteGxkQ0J5WVc1a2IyMVRhRzkzYVc1bklEMGdabUZzYzJVN1hHNXNaWFFnYVdSNE8xeHViR1YwSUhCeVpYWkpkR1Z0TzF4dWJHVjBJSEJ5WlhaV2FXVjNPMXh1WEc1amIyNXpkQ0J0WVd0bFRtRjJUR2x6ZEdWdVpYSnpJRDBnS0NrZ1BUNGdlMXh1WEhSc1pYUWdhWFJsYlhNZ1BTQkJjbkpoZVM1bWNtOXRLR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXFjeTEyWlhKMGFXTmhiQzF1WVhZbktWeHVYSFJjZEM1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NjdWJtRjJMV3hwYm1zbktTazdYRzVjYmx4MGFYUmxiWE11Wm05eVJXRmphQ2hzYVNBOVBpQjdYRzVjZEZ4MFhHNWNkRngwYkdWMElHbGtJRDBnYkdrdWFXUWdmSHdnYm5Wc2JEdGNibHgwWEhSc2FTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZGpiR2xqYXljc0lDZ3BJRDArSUh0Y2JseDBYSFJjZEdsbUlDZ2hiV0ZwYms5d1pXNHBJRzFoYVc1UGNHVnVJRDBnZEhKMVpUdGNibHgwWEhSY2RISmhibVJ2YlU5d1pXNGdQU0JtWVd4elpUdGNibHgwWEhSY2RHbG1JQ2hzYVNBaFBUMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb0oycDJMV3hoWWljcEtTQnNZV0l1YzNKaklEMGdiR0ZpTG5OeVl6dGNibHgwWEhSY2RHeHBMbU5zWVhOelRHbHpkQzVoWkdRb0oyNWhkaTFzYVc1ckxTMWhZM1JwZG1VbktUdGNibHgwWEhSY2RHbG1JQ2h3Y21WMlNYUmxiU0FtSmlCd2NtVjJTWFJsYlNBaFBUMGdiR2twSUhCeVpYWkpkR1Z0TG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjI1aGRpMXNhVzVyTFMxaFkzUnBkbVVuS1R0Y2JseDBYSFJjZEhCeVpYWkpkR1Z0SUQwZ2JHazdYRzVjYmx4MFhIUmNkR2xtSUNnaGNtRnVaRzl0VDNCbGJpa2dlMXh1WEhSY2RGeDBYSFJ5WVc1a2IyMHVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ25kbWxsZHkxdmNIUnBiMjR0TFhOb2IzY25LVHRjYmx4MFhIUmNkRngwY21GdVpHOXRMbVpwY25OMFJXeGxiV1Z1ZEVOb2FXeGtMbk55WXlBOUlGd2lYQ0k3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEd4bGRDQjJhV1YzSUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvWUdFdEpIdHBaSDFnS1R0Y2RGeHVYSFJjZEZ4MGRtbGxkeTVqYkdGemMweHBjM1F1WVdSa0tDZDJhV1YzTFc5d2RHbHZiaTB0YzJodmR5Y3BPMXh1WEhSY2RGeDBhV1lnS0hCeVpYWldhV1YzSUNZbUlIQnlaWFpXYVdWM0lEMDlQU0J5WVc1a2IyMHBJSEpoYm1SdmJTNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDZDJhV1YzTFc5d2RHbHZiaTB0YzJodmR5Y3BPMXh1WEhSY2RGeDBhV1lnS0hCeVpYWldhV1YzSUNZbUlIQnlaWFpXYVdWM0lDRTlQU0IyYVdWM0tTQndjbVYyVm1sbGR5NWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDZDJhV1YzTFc5d2RHbHZiaTB0YzJodmR5Y3BPMXh1WEhSY2RGeDBjSEpsZGxacFpYY2dQU0IyYVdWM08xeHVYSFJjZEgwcFhHNWNkSDBwWEc1OU8xeHVYRzVqYjI1emRDQnRZV3RsUVhKeWIzZE1hWE4wWlc1bGNuTWdQU0FvS1NBOVBpQjdYRzVjZEdGeWNtOTNNUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJQ2hsZG1WdWRDa2dQVDRnZTF4dVhIUmNkR3hsZENCaFkzUnBiMjRnUFNBaFlYSnliM2N4VW05MFlYUmxJRDhnSjJGa1pDY2dPaUFuY21WdGIzWmxKenRjYmx4MFhIUnNaWFFnYUc5eWFYcHZiblJoYkU1aGRpQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXFjeTFvYjNKcGVtOXVkR0ZzTFc1aGRpY3BPMXh1WEhSY2RHVjJaVzUwTG5SaGNtZGxkQzVqYkdGemMweHBjM1JiWVdOMGFXOXVYU2duYVdOdmJpMWhjbkp2ZHkwdGNtOTBZWFJsSnlrN1hHNWNkRngwYUc5eWFYcHZiblJoYkU1aGRpNWpiR0Z6YzB4cGMzUmJZV04wYVc5dVhTZ25ibUYyTFcxaGFXNWZYMnhwYzNRdExYTm9iM2NuS1R0Y2JseDBYSFF2THlCc1lXSXVjM0pqSUQwZ2JHRmlMbk55WXp0Y2JseDBYSFJwWmlBb0lXRnljbTkzTVZKdmRHRjBaU2tnZTF4dVhIUmNkRngwYVdZZ0tIQnlaWFpXYVdWM0lDWW1JSEJ5WlhaV2FXVjNJRDA5UFNCeVlXNWtiMjBwSUh0Y2JseDBYSFJjZEZ4MGNtRnVaRzl0TG1Oc1lYTnpUR2x6ZEM1aFpHUW9KM1pwWlhjdGIzQjBhVzl1TFMxemFHOTNKeWs3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBYSFJwWmlBb2NISmxkbFpwWlhjZ0ppWWdjSEpsZGxacFpYY2dJVDA5SUhKaGJtUnZiU0FtSmlBaGJXRnBiazl3Wlc0cElIdGNibHgwWEhSY2RGeDBjSEpsZGxacFpYY3VZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ25kbWxsZHkxdmNIUnBiMjR0TFhOb2IzY25LVHRjYmx4MFhIUmNkRngwY0hKbGRsWnBaWGNnUFNCeVlXNWtiMjA3WEc1Y2RGeDBYSFJjZEhKaGJtUnZiVTl3Wlc0Z1BTQjBjblZsTzF4dVhIUmNkRngwWEhSc1pYUWdkbWxrWlc4Z1BTQm5aWFJTWVc1a2IyMVdhV1JsYnlncE8xeHVYSFJjZEZ4MFhIUmthWE53YkdGNVZtbGtaVzhvZG1sa1pXOHBPMXh1WEhSY2RGeDBYSFJ5WVc1a2IyMHVZMnhoYzNOTWFYTjBMbUZrWkNnbmRtbGxkeTF2Y0hScGIyNHRMWE5vYjNjbktUdGNibHgwWEhSY2RIMWNibHgwWEhSOUlHVnNjMlVnYVdZZ0tDRnRZV2x1VDNCbGJpa2dlMXh1WEhSY2RGeDBaR2x6Y0d4aGVWWnBaR1Z2S0NjbktUdGNibHgwWEhSY2RISmhibVJ2YlNBbUppQnlZVzVrYjIwdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbmRtbGxkeTF2Y0hScGIyNHRMWE5vYjNjbktUdGNibHgwWEhSY2RISmhibVJ2YlM1bWFYSnpkRVZzWlcxbGJuUkRhR2xzWkM1emNtTWdQU0JjSWx3aU8xeHVYSFJjZEZ4MGFXWWdLSEJ5WlhaV2FXVjNJQ1ltSUhCeVpYWldhV1YzSUNFOVBTQnlZVzVrYjIwcElIQnlaWFpXYVdWM0xtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0ozWnBaWGN0YjNCMGFXOXVMUzF6YUc5M0p5azdYRzVjZEZ4MFhIUnlZVzVrYjIxUGNHVnVJRDBnZEhKMVpUdGNibHgwWEhSOUlGeHVYRzVjZEZ4MFlYSnliM2N4VW05MFlYUmxJRDBnSVdGeWNtOTNNVkp2ZEdGMFpUdGNibHgwZlNrN1hHNWNibHgwWVhKeWIzY3lMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLR1YyWlc1MEtTQTlQaUI3WEc1Y2RGeDBiR1YwSUdGamRHbHZiaUE5SUNGaGNuSnZkekpTYjNSaGRHVWdQeUFuWVdSa0p5QTZJQ2R5WlcxdmRtVW5PMXh1WEhSY2RHVjJaVzUwTG5SaGNtZGxkQzVqYkdGemMweHBjM1JiWVdOMGFXOXVYU2duYVdOdmJpMWhjbkp2ZHkwdFpHOTNiaTB0Y205MFlYUmxKeWs3WEc1Y2RGeDBkbVZ5ZEdsallXeE9ZWFl1WTJ4aGMzTk1hWE4wVzJGamRHbHZibDBvSjI1aGRpMHRjMmh2ZHljcE8xeHVYSFJjZEdsbUlDZ2hZWEp5YjNjeVVtOTBZWFJsS1Z4dVhIUmNkRngwY0hKbGRsWnBaWGNnSmlZZ2NISmxkbFpwWlhjdVkyeGhjM05NYVhOMExtRmtaQ2duZG1sbGR5MXZjSFJwYjI0dExYTm9iM2NuS1R0Y2JseDBYSFJsYkhObElHbG1JQ2hoY25KdmR6SlNiM1JoZEdVcElIdGNibHgwWEhSY2RHbG1JQ2h3Y21WMlZtbGxkeUFtSmlCd2NtVjJWbWxsZHlBaFBUMGdjbUZ1Wkc5dEtTQjdYRzVjZEZ4MFhIUmNkSEJ5WlhaV2FXVjNMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KM1pwWlhjdGIzQjBhVzl1TFMxemFHOTNKeWs3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBYSFJwWmlBb2JXRnBiazl3Wlc0cElIdGNibHgwWEhSY2RGeDBiR0ZpTG5OeVl5QTlJR3hoWWk1emNtTTdYRzVjZEZ4MFhIUjlJRnh1WEhSY2RIMWNibHgwWEhSaGNuSnZkekpTYjNSaGRHVWdQU0FoWVhKeWIzY3lVbTkwWVhSbE8xeHVYSFI5S1R0Y2JseHVYSFJ0YjJKcGJHVkJjbkp2ZHk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNobGRtVnVkQ2tnUFQ0Z2UxeHVYSFJjZEdsbUlDaHlZVzVrYjIxVGFHOTNhVzVuS1NCeVlXNWtiMjB1YzJWMFFYUjBjbWxpZFhSbEtDZHpkSGxzWlNjc0lDZDBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTUNrbktUdGNibHgwWEhSc1pYUWdZV04wYVc5dUlEMGdJV0Z5Y205M01sSnZkR0YwWlNBL0lDZGhaR1FuSURvZ0ozSmxiVzkyWlNjN1hHNWNkRngwWlhabGJuUXVkR0Z5WjJWMExtTnNZWE56VEdsemRGdGhZM1JwYjI1ZEtDZHBZMjl1TFdGeWNtOTNMUzFrYjNkdUxTMXliM1JoZEdVbktUdGNibHgwWEhSMlpYSjBhV05oYkU1aGRpNWpiR0Z6YzB4cGMzUmJZV04wYVc5dVhTZ25ibUYyTFMxemFHOTNKeWs3WEc1Y2RGeDBhV1lnS0NGaGNuSnZkekpTYjNSaGRHVXBYRzVjZEZ4MFhIUndjbVYyVm1sbGR5QW1KaUJ3Y21WMlZtbGxkeTVqYkdGemMweHBjM1F1WVdSa0tDZDJhV1YzTFc5d2RHbHZiaTB0YzJodmR5Y3BPMXh1WEhSY2RHVnNjMlVnYVdZZ0tHRnljbTkzTWxKdmRHRjBaU2tnWEc1Y2RGeDBYSFJ3Y21WMlZtbGxkeUFtSmlCd2NtVjJWbWxsZHk1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkMmFXVjNMVzl3ZEdsdmJpMHRjMmh2ZHljcE8xeHVYSFJjZEdGeWNtOTNNbEp2ZEdGMFpTQTlJQ0ZoY25KdmR6SlNiM1JoZEdVN1hHNWNkSDBwTzF4dVhHNWNkQzh2SUdGeWNtOTNjMVZ3TG1admNrVmhZMmdvWVhKeWIzY2dQVDRnZTF4dVhIUXZMeUJjZEdOdmJuTnZiR1V1Ykc5bktDZGhjbkp2ZHpvZ0p5d2dZWEp5YjNjcE8xeHVYSFF2THlCY2RHRnljbTkzTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh1WEhRdkx5QmNkRngwWTI5dWMyOXNaUzVzYjJjb0oyTnNhV05yWldRbktUdGNibHgwTHk4Z1hIUmNkSFJwZEd4bExuTmpjbTlzYkVsdWRHOVdhV1YzS0h0aVpXaGhkbWx2Y2pvZ1hDSnpiVzl2ZEdoY0lpd2dZbXh2WTJzNklGd2ljM1JoY25SY0luMHBPMXh1WEhRdkx5QmNkSDBwWEc1Y2RDOHZJSDBwTzF4dWZUdGNibHh1WEc1amIyNXpkQ0J0WVd0bFZHbDBiR1ZNYVhOMFpXNWxjaUE5SUNncElEMCtJSHRjYmx4MGRHbDBiR1V1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0FvS1NBOVBpQjdYRzVjZEZ4MGRYQmtZWFJsVkdobGJXVW9LVHRjYmx4MFhIUjNhVzVrYjNjdWMyTnliMnhzVkc4b01Dd2dMVE13S1R0Y2JseDBmU2xjYm4wN1hHNWNibXhsZENCd2JHRjVaV1FnUFNCbVlXeHpaVHRjYm1OdmJuTjBJRzFoYTJWRGJHOWphMHhwYzNSbGJtVnlJRDBnS0NrZ1BUNGdlMXh1WEhSamJHOWpheTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJQ2dwSUQwK0lIdGNibHgwWEhScFppQW9JWEJzWVhsbFpDa2djR3hoZVdWa0lEMGdkSEoxWlR0Y2JseDBYSFJwWmlBb2JXRnBiazl3Wlc0cElIdGNibHgwWEhSY2RIQnlaWFpXYVdWM0xtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0ozWnBaWGN0YjNCMGFXOXVMUzF6YUc5M0p5azdYRzVjZEZ4MFhIUnNZV0l1YzNKaklEMGdiR0ZpTG5OeVl6dGNibHgwWEhSY2RHMWhhVzVQY0dWdUlEMGdabUZzYzJVN1hHNWNkRngwZlZ4dVhIUmNkR3hsZENCMmFXUmxieUE5SUdkbGRGSmhibVJ2YlZacFpHVnZLQ2s3WEc1Y2RGeDBiR1YwSUhOeVl5QTlJSEJzWVhsbFpDQS9JR0FrZTNacFpHVnZmVDloZFhSdmNHeGhlVDB4WUNBNklIWnBaR1Z2TzF4dVhIUmNkR1JwYzNCc1lYbFdhV1JsYnloemNtTXBPMXh1WEhSY2RHbG1JQ2h3Y21WMlZtbGxkeUFoUFQwZ2NtRnVaRzl0S1NCd2NtVjJWbWxsZHlBOUlISmhibVJ2YlR0Y2JseDBYSFJwWmlBb0lYSmhibVJ2YlU5d1pXNHBJSHRjYmx4MFhIUmNkSEpoYm1SdmJTNWpiR0Z6YzB4cGMzUXVZV1JrS0NkMmFXVjNMVzl3ZEdsdmJpMHRjMmh2ZHljcE8xeHVYSFJjZEZ4MGNtRnVaRzl0VDNCbGJpQTlJSFJ5ZFdVN1hHNWNkRngwZlZ4dVhIUjlLVnh1WEc1Y2RHMXZZbWxzWlVOc2IyTnJMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLQ2tnUFQ0Z2UxeHVYSFJjZEdsbUlDaHRZV2x1VDNCbGJpa2dlMXh1WEhSY2RGeDBiR0ZpTG5OeVl5QTlJR3hoWWk1emNtTTdYRzVjZEZ4MFhIUnRZV2x1VDNCbGJpQTlJR1poYkhObE8xeHVYSFJjZEgxY2JseDBYSFJ5WVc1a2IyMVRhRzkzYVc1bklEMGdkSEoxWlR0Y2JseDBYSFJwWmlBb0lXRnljbTkzTWxKdmRHRjBaU2tnY21GdVpHOXRMbk5sZEVGMGRISnBZblYwWlNnbmMzUjViR1VuTENBbmRISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLQzB5TURCd2VDa25LVHRjYmx4MFhIUnBaaUFvWVhKeWIzY3lVbTkwWVhSbEtTQnlZVzVrYjIwdWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhsc1pTY3NJQ2QwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb01Da25LVHRjYmx4MFhIUnBaaUFvY0hKbGRsWnBaWGNnSmlZZ2NISmxkbFpwWlhjZ0lUMDlJSEpoYm1SdmJTa2djSEpsZGxacFpYY3VZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ25kbWxsZHkxdmNIUnBiMjR0TFhOb2IzY25LVHRjYmx4MFhIUnBaaUFvSVhCc1lYbGxaQ2tnY0d4aGVXVmtJRDBnZEhKMVpUdGNibHgwWEhSc1pYUWdkbWxrWlc4Z1BTQm5aWFJTWVc1a2IyMVdhV1JsYnlncE8xeHVYSFJjZEd4bGRDQnpjbU1nUFNCd2JHRjVaV1FnUHlCZ0pIdDJhV1JsYjMwL1lYVjBiM0JzWVhrOU1XQWdPaUIyYVdSbGJ6dGNibHgwWEhSa2FYTndiR0Y1Vm1sa1pXOG9jM0pqS1R0Y2JseDBYSFJ5WVc1a2IyMHVZMnhoYzNOTWFYTjBMbUZrWkNnbmRtbGxkeTF2Y0hScGIyNHRMWE5vYjNjbktUdGNibHgwWEhSd2NtVjJWbWxsZHlBOUlISmhibVJ2YlR0Y2JseDBmU2xjYm4wN1hHNWNibXhsZENCMmFXUmxiM05EYjNCNUlEMGdXeTR1TG5acFpHVnZjMTA3WEc1c1pYUWdiblZ0SUQwZ01URTdYRzVqYjI1emRDQm5aWFJTWVc1a2IyMVdhV1JsYnlBOUlDZ3BJRDArSUh0Y2JseDBhV1lnS0c1MWJTQTlQVDBnTUNrZ2UxeHVYSFJjZEc1MWJTQTlJREV4TzF4dVhIUmNkSFpwWkdWdmMwTnZjSGtnUFNCYkxpNHVkbWxrWlc5elhUdGNibHgwZlZ4dVhIUnNaWFFnYVNBOUlFMWhkR2d1Wm14dmIzSW9UV0YwYUM1eVlXNWtiMjBvS1NBcUlHNTFiU2s3WEc1Y2RHeGxkQ0IyYVdSbGJ5QTlJSFpwWkdWdmMwTnZjSGxiYVYwN1hHNWNkSFpwWkdWdmMwTnZjSGt1YzNCc2FXTmxLR2tzSURFcE8xeHVYSFJ1ZFcwdExWeHVYSFJ5WlhSMWNtNGdkbWxrWlc4N1hHNTlPMXh1WEc1amIyNXpkQ0JrYVhOd2JHRjVWbWxrWlc4Z1BTQW9kbWxrWlc4cElEMCtJSHRjYmx4MGNtRnVaRzl0TG1acGNuTjBSV3hsYldWdWRFTm9hV3hrTG5OeVl5QTlJSFpwWkdWdk8xeHVmVnh1WEc1amIyNXpkQ0IwYUdWdFpYTWdQU0JiSjI5bVppY3NJQ2R3YVc1ckp5d2dKM0IxY25Cc1pTY3NJQ2RwYldGblpTY3NJQ2R5WldRbkxDQWdKMmR5WldWdUp5d2dKMkpzZFdVbkxDQW5jM1JoZEhWbEoxMDdYRzVqYjI1emRDQjFjR1JoZEdWVWFHVnRaU0E5SUNncElEMCtJSHRjYmx4MGJHVjBJSEJ5WlhaVWFHVnRaU0E5SUhSb1pXMWxjMXRwWkhoZE8xeHVYSFJwWmlBb2FXUjRJRHdnTnlrZ2FXUjRLeXRjYmx4MFpXeHpaU0JwWkhnZ1BTQXhPMXh1WEhSc1pYUWdibVY0ZEZSb1pXMWxJRDBnZEdobGJXVnpXMmxrZUYwN1hHNWNkSFJvWlcxbExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb1lIUm9aVzFsTFMwa2UzQnlaWFpVYUdWdFpYMWdLVHRjYmx4MGRHaGxiV1V1WTJ4aGMzTk1hWE4wTG1Ga1pDaGdkR2hsYldVdExTUjdibVY0ZEZSb1pXMWxmV0FwTzF4dWZUdGNibHh1WTI5dWMzUWdhVzVwZENBOUlDZ3BJRDArSUh0Y2JseDBhV1I0SUQwZ1RXRjBhQzVtYkc5dmNpaE5ZWFJvTG5KaGJtUnZiU2dwSUNvZ05TazdYRzVjZEhSb1pXMWxMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9ZSFJvWlcxbExTMXZabVpnS1R0Y2JseDBkWEJrWVhSbFZHaGxiV1VvS1R0Y2JseDBiV0ZyWlVGeWNtOTNUR2x6ZEdWdVpYSnpLQ2s3WEc1Y2RHMWhhMlZPWVhaTWFYTjBaVzVsY25Nb0tUdGNibHgwYldGclpWUnBkR3hsVEdsemRHVnVaWElvS1R0Y2JseDBiV0ZyWlVOc2IyTnJUR2x6ZEdWdVpYSW9LVHRjYm4wN1hHNWNibWx1YVhRb0tUc2lMQ0pqYjI1emRDQjJhV1JsYjNNZ1BTQmJYRzVjZEdCb2RIUndjem92TDNkM2R5NTViM1YwZFdKbExtTnZiUzlsYldKbFpDOTFiekp5TFRCNlZtUTJXV0FzWEc1Y2RHQm9kSFJ3Y3pvdkwzZDNkeTU1YjNWMGRXSmxMbU52YlM5bGJXSmxaQzlFUTJ0eGJrSlhVbkJNVVdBc1hHNWNkR0JvZEhSd2N6b3ZMM2QzZHk1NWIzVjBkV0psTG1OdmJTOWxiV0psWkM4NWRGSjBjM2hMZVU5Sk1HQXNYRzVjZEdCb2RIUndjem92TDNkM2R5NTViM1YwZFdKbExtTnZiUzlsYldKbFpDOUNNM0JYTlcwNGNISk5NR0FzWEc1Y2RHQm9kSFJ3Y3pvdkwzZDNkeTU1YjNWMGRXSmxMbU52YlM5bGJXSmxaQzlYWldkWE5rVXRkbWRRV1dBc1hHNWNkR0JvZEhSd2N6b3ZMM2QzZHk1NWIzVjBkV0psTG1OdmJTOWxiV0psWkM4M1p6VnNRazE1WlMxRE1HQXNYRzVjZEdCb2RIUndjem92TDNkM2R5NTViM1YwZFdKbExtTnZiUzlsYldKbFpDOUdhRTB6UmpSb2NGaHhaMkFzWEc1Y2RHQm9kSFJ3Y3pvdkwzZDNkeTU1YjNWMGRXSmxMbU52YlM5bGJXSmxaQzlXYVZSa1ZGTlZVVzlyWjJBc1hHNWNkR0JvZEhSd2N6b3ZMM2QzZHk1NWIzVjBkV0psTG1OdmJTOWxiV0psWkM5dWVqZEpTVzFXUzNaS1NXQXNYRzVjZEdCb2RIUndjem92TDNkM2R5NTViM1YwZFdKbExtTnZiUzlsYldKbFpDOXlSekZSTmxGVlltUk5WV0FzWEc1Y2RHQm9kSFJ3Y3pvdkwzZDNkeTU1YjNWMGRXSmxMbU52YlM5bGJXSmxaQzlYT1UxSlJGWk9RbUpMYzJBc1hHNWNibDA3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUhacFpHVnZjenNpWFgwPSJ9
