(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _videos = require('./videos');

var _videos2 = _interopRequireDefault(_videos);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var theme = document.querySelector('.theme');
var title = document.getElementById('jv-title');
var arrow1 = document.querySelector('.icon-arrow');
var arrow2 = document.querySelector('.icon-arrow--down');
var arrowsUp = Array.from(document.querySelectorAll('.up-arrow'));
var verticalNav = document.querySelector('.js-vertical-nav');
var random = document.getElementById('random');
var clock = document.getElementById('clock');
var mobileClock = document.getElementById('clock--mobile');
var mobileArrow = document.getElementById('arrow--mobile');
var lab = document.getElementById('lab');

var arrow1Rotate = true;
var arrow2Rotate = true;
var randomOpen = false;
var mainOpen = false;
var randomShowing = false;
var idx = void 0;
var prevItem = void 0;
var prevView = void 0;

var makeNavListeners = function makeNavListeners() {
	var items = Array.from(document.querySelector('.js-vertical-nav').querySelectorAll('.nav-link'));

	items.forEach(function (li) {

		var id = li.id || null;
		li.addEventListener('click', function () {
			if (!mainOpen) mainOpen = true;
			randomOpen = false;
			if (li !== document.getElementById('jv-lab')) lab.src = lab.src;
			li.classList.add('nav-link--active');
			if (prevItem && prevItem !== li) prevItem.classList.remove('nav-link--active');
			prevItem = li;

			if (!randomOpen) {
				random.classList.remove('view-option--show');
				random.firstElementChild.src = "";
			}

			var view = document.getElementById('a-' + id);
			view.classList.add('view-option--show');
			if (prevView && prevView === random) random.classList.remove('view-option--show');
			if (prevView && prevView !== view) prevView.classList.remove('view-option--show');
			prevView = view;
		});
	});
};

var makeArrowListeners = function makeArrowListeners() {
	arrow1.addEventListener('click', function (event) {
		var action = !arrow1Rotate ? 'add' : 'remove';
		var horizontalNav = document.querySelector('.js-horizontal-nav');
		event.target.classList[action]('icon-arrow--rotate');
		horizontalNav.classList[action]('nav-main__list--show');
		// lab.src = lab.src;
		if (!arrow1Rotate) {
			if (prevView && prevView === random) {
				random.classList.add('view-option--show');
			}
			if (prevView && prevView !== random && !mainOpen) {
				prevView.classList.remove('view-option--show');
				prevView = random;
				randomOpen = true;
				var video = getRandomVideo();
				displayVideo(video);
				random.classList.add('view-option--show');
			}
		} else if (!mainOpen) {
			displayVideo('');
			random && random.classList.remove('view-option--show');
			random.firstElementChild.src = "";
			if (prevView && prevView !== random) prevView.classList.remove('view-option--show');
			randomOpen = true;
		}

		arrow1Rotate = !arrow1Rotate;
	});

	arrow2.addEventListener('click', function (event) {
		var action = !arrow2Rotate ? 'add' : 'remove';
		event.target.classList[action]('icon-arrow--down--rotate');
		verticalNav.classList[action]('nav--show');
		if (!arrow2Rotate) prevView && prevView.classList.add('view-option--show');else if (arrow2Rotate) {
			if (prevView && prevView !== random) {
				prevView.classList.remove('view-option--show');
			}
			if (mainOpen) {
				lab.src = lab.src;
			}
		}
		arrow2Rotate = !arrow2Rotate;
	});

	mobileArrow.addEventListener('click', function (event) {
		if (randomShowing) random.setAttribute('style', 'transform: translateY(0)');
		var action = !arrow2Rotate ? 'add' : 'remove';
		event.target.classList[action]('icon-arrow--down--rotate');
		verticalNav.classList[action]('nav--show');
		if (!arrow2Rotate) prevView && prevView.classList.add('view-option--show');else if (arrow2Rotate) prevView && prevView.classList.remove('view-option--show');
		arrow2Rotate = !arrow2Rotate;
	});

	arrowsUp.forEach(function (arrow) {
		arrow.addEventListener('click', function () {
			title.scrollIntoView({ behavior: "smooth", block: "start" });
		});
	});
};

var makeTitleListener = function makeTitleListener() {
	title.addEventListener('click', function () {
		window.scrollTo(0, -30);
	});
};

var played = false;
var makeClockListener = function makeClockListener() {
	clock.addEventListener('click', function () {
		if (!played) played = true;
		if (mainOpen) {
			prevView.classList.remove('view-option--show');
			lab.src = lab.src;
			mainOpen = false;
		}
		var video = getRandomVideo();
		var src = played ? video + '?autoplay=1' : video;
		displayVideo(src);
		if (prevView !== random) prevView = random;
		if (!randomOpen) {
			random.classList.add('view-option--show');
			randomOpen = true;
		}
	});

	mobileClock.addEventListener('click', function () {
		if (mainOpen) {
			lab.src = lab.src;
			mainOpen = false;
		}
		randomShowing = true;
		if (!arrow2Rotate) random.setAttribute('style', 'transform: translateY(-200px)');
		if (arrow2Rotate) random.setAttribute('style', 'transform: translateY(0)');
		if (prevView && prevView !== random) prevView.classList.remove('view-option--show');
		if (!played) played = true;
		var video = getRandomVideo();
		var src = played ? video + '?autoplay=1' : video;
		displayVideo(src);
		random.classList.add('view-option--show');
		prevView = random;
	});
};

var videosCopy = [].concat(_toConsumableArray(_videos2.default));
var num = 11;
var getRandomVideo = function getRandomVideo() {
	if (num === 0) {
		num = 11;
		videosCopy = [].concat(_toConsumableArray(_videos2.default));
	}
	var i = Math.floor(Math.random() * num);
	var video = videosCopy[i];
	videosCopy.splice(i, 1);
	num--;
	return video;
};

var displayVideo = function displayVideo(video) {
	random.firstElementChild.src = video;
};

var init = function init() {
	theme.classList.remove('theme--off');
	theme.classList.add('theme--image');
	makeArrowListeners();
	makeNavListeners();
	makeTitleListener();
	makeClockListener();
};

init();

},{"./videos":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var videos = ["https://www.youtube.com/embed/uo2r-0zVd6Y", "https://www.youtube.com/embed/DCkqnBWRpLQ", "https://www.youtube.com/embed/9tRtsxKyOI0", "https://www.youtube.com/embed/B3pW5m8prM0", "https://www.youtube.com/embed/WegW6E-vgPY", "https://www.youtube.com/embed/7g5lBMye-C0", "https://www.youtube.com/embed/FhM3F4hpXqg", "https://www.youtube.com/embed/ViTdTSUQokg", "https://www.youtube.com/embed/nz7IImVKvJI", "https://www.youtube.com/embed/rG1Q6QUbdMU", "https://www.youtube.com/embed/W9MIDVNBbKs"];

exports.default = videos;

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
