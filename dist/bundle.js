(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var theme = document.querySelector('.theme');
console.log('theme: ', theme);
var title = document.getElementById('jv-title');
var arrow1 = document.querySelector('.icon-arrow');
var arrow2 = document.querySelector('.icon-arrow--down');
var verticalNav = document.querySelector('.js-vertical-nav');
var video = document.querySelector('.video');

var arrow1Rotate = false;
var arrow2Rotate = false;

var makeNavListeners = function makeNavListeners() {
	var items = Array.from(document.querySelector('.nav-main__list').querySelectorAll('.nav-main__list-item'));

	items.forEach(function (li) {
		var id = li.id || null;
		li.addEventListener('click', function () {
			// updateTheme();
			if (!arrow2Rotate) {
				arrow2.classList.add('icon-arrow--down--rotate');
				verticalNav.classList.add('nav--show');
				arrow2Rotate = true;
			}

			var target = document.getElementById('a-' + id);
			console.log('scrollY: ', window.scrollY);
			target.scrollIntoView({ behavior: "smooth" });
			console.log('scrollY: ', window.scrollY);
		});
	});
};

var makeArrowListeners = function makeArrowListeners() {
	arrow1.addEventListener('click', function (event) {
		// updateTheme();
		var action = !arrow1Rotate ? 'add' : 'remove';
		var horizontalNav = document.querySelector('.js-horizontal-nav');
		event.target.classList[action]('icon-arrow--rotate');
		horizontalNav.classList[action]('nav-main__list--show');
		arrow1Rotate = !arrow1Rotate;
		video.style.opacity = 1;
	});

	arrow2.addEventListener('click', function (event) {
		// updateTheme();
		var action = !arrow2Rotate ? 'add' : 'remove';
		event.target.classList[action]('icon-arrow--down--rotate');
		verticalNav.classList[action]('nav--show');
		arrow2Rotate = !arrow2Rotate;
		video.style.opacity = 1;
	});
};

var makeTitleListener = function makeTitleListener() {
	title.addEventListener('click', function () {
		updateTheme();
		window.scrollTo(0, -30);
		console.log(window.scrollY);
	});
};

var themes = ['pink', 'purple', 'red', 'green', 'blue'];
var idx = 0;
var updateTheme = function updateTheme() {
	var prevTheme = themes[idx];
	console.log('prevTheme: ', prevTheme);
	if (idx < 4) idx++;else idx = 0;
	console.log('idx: ', idx);
	var nextTheme = themes[idx];
	console.log('nextTheme: ', nextTheme);
	theme.classList.remove('theme--' + prevTheme);
	theme.classList.add('theme--' + nextTheme);
};

var init = function init() {
	makeNavListeners();
	makeArrowListeners();
	makeTitleListener();
};

init();

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
